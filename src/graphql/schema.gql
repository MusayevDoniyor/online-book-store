# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthResponse {
  message: String!
  token: String!
  user: Users!
}

type BookResponse {
  """Book response data"""
  book: Books!

  """Book response description"""
  message: String!
}

type Books {
  """Book author"""
  author: String!

  """Book created time"""
  created_at: DateTime!

  """Book description"""
  description: String!

  """Book ID"""
  id: String!

  """Book available"""
  is_available: Boolean!

  """Book price"""
  price: Float!

  """Book title"""
  title: String!
}

input CreateBookInput {
  """Book author"""
  author: String!

  """Book description"""
  description: String!

  """Book price"""
  price: Float!

  """Book title"""
  title: String!
}

input CreateOrderInput {
  """Book IDs"""
  bookIDs: [String!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  """User email"""
  email: String!

  """User password"""
  password: String!
}

type Mutation {
  createBook(createBookInput: CreateBookInput!): BookResponse!
  createOrder(createOrderInput: CreateOrderInput!): Orders!
  loginUser(loginInput: LoginInput!): AuthResponse!
  registerUser(registerInput: RegisterInput!): AuthResponse!
  removeBook(id: String!): BookResponse!
  updateBook(updateBookInput: UpdateBookInput!): BookResponse!
}

type Orders {
  books: [Books!]!
  created_at: DateTime!

  """Order ID"""
  id: String!
  total_price: Float!
  user: Users!
}

type Query {
  book(id: Int!): Books!
  books: [Books!]!
  me: Users!
  order(id: String!): Orders!
  orders: [Orders!]!
}

input RegisterInput {
  """User email"""
  email: String!

  """User name"""
  name: String!

  """User password"""
  password: String!

  """User roles"""
  role: UserRoles! = USER
}

input UpdateBookInput {
  """Book author"""
  author: String

  """Book description"""
  description: String
  id: String!

  """Book price"""
  price: Float

  """Book title"""
  title: String
}

"""Available roles for users"""
enum UserRoles {
  ADMIN
  USER
}

type Users {
  """User registered time"""
  created_at: DateTime!

  """User email"""
  email: String!

  """User ID"""
  id: String!

  """User name"""
  name: String!
  orders: [Orders!]!

  """User role"""
  role: String!
}